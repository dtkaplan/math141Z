% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/draw_gradient.R
\name{draw_gradient}
\alias{draw_gradient}
\title{Draw gradient arrows on a plot made with \code{mosaicCalc::contour_plot()}}
\usage{
draw_gradient(P = NULL, f, x, y, scale = 0.1, color = "red")
}
\arguments{
\item{P}{The contour plot. Typically, you will pipe the \code{contour_plot()} command
into  \code{draw_gradient()} and so you can ignore this argument: the piping process will fill
it in.}

\item{f}{the mathematical function of two inputs whose gradient is to be displayed.}

\item{x}{Numerical value(s) of the x-coordinate at which to evaluate the gradient.}

\item{y}{Similar to \code{x}}

\item{scale}{A numerical fudge factor so that the gradient arrows can be scaled to look neither
overlong nor overshort on the graph.}

\item{color}{Default "red"}
}
\description{
Draw gradient arrows on a plot made with \code{mosaicCalc::contour_plot()}
}
\details{
Depending on the relative extent of the x and y axes, the gradient arrows
may not appear to the eye orthogonal to the contour lines, even though they are numerically.
Use \code{coord_fixed()} as shown in the example to fix this graphical artifact.
}
\examples{
\dontrun{
library(mosaicCalc)
library(mosaic)
library(ggformula)
landscape <- rfun( ~ x + y, seed = 101)
contour_plot(landscape(x, y) ~ x + y, domain(x=c(-5,5), y = c(-5, 5))) \%>\%
  draw_gradient(landscape, x = -5:5, y = 5:-5, scale=1 )  \%>\%
  gf_refine(coord_fixed())
}
}
